형변환 (Type Conversion)
- 어떤 데이터의 데이터 타입이
  A에서 B로 변환되는 현상

  혹은 프로그래머가 의도해서
  A에서 B로 데이터타입을 바꿔주는 일


암시적 형변환(Implicit Type Conversion)

- 조용히... 아무말없이... 일어나는 형변환

- 상대적으로 작은 데이터타입의 데이터가
  상대적으로 큰 데이터타입으로 옮겨갈때


명시적 형변환(Explicit Type conversion)

- 시끄럽게, 내가 이러이러한 데이터타입으로
  바꾸겠다 라고 명시하면서 형변환

- 상대적으로 더 큰 데이터타입의 데이터가
  상대적으로 더 작은 데이터타입으로 옮겨갈때
  사용해주는 방식

- 데이터가 옮겨갈때, 데이터가 이상하게
  바뀔수도 있으므로 주의를 요한다.

강의노트 p.23 암시적형변환 예제를 실행해보자!

강의노트 p.25 명시적형변환 예제를 실행해보자!

자바에서는 문자열 데이터를
String이라는 데이터타입에 집어넣을수 있다.

만약

String 타입의

"문자열" + 숫자데이터타입

을 실행하면, 숫자 데이터타입에 저장된 숫자가
문자열 옆에 붙어버린다.
즉 숫자가 씌여진 문자열 데이터
String으로 형변환이 일어난다.

============================================================

주석

프로그램 안에서 컴파일이 되지 않는 문장
-> 컴퓨터의 기능 수행에는 영향을 주지 않는 문장

- 쓰는이유
-> 프로그래머들끼리의 의사소통
-> 지금은 필요없는데, 나중에 필요할지도 모르는
   소스코드 를 남겨놓기 위해서

멀티라인 주석
- 여러줄에 걸쳐 주석을 사용하기 위해

- 자바에서는 /* 시작   */ 닫아준다!

싱글라인 주석(한줄 주석)
- 딱 한줄만 주석사용할때
- 자바에서는 // <- 요게 있는 한줄을 주석

============================================================

연산자
- 오칙연산자 (+, -, *, /, %)
- 단항연산자 (증감연산자, 논리부정연산자 !)

- 비교연산자
-> 어떤 항목들을 비교하기 위해서 사용한다
-> 비교연산자의 결과값은 항상 true/false
   즉 boolean 타입으로 나온다



[논리연산자]

1) OO야 빨래널어놓고, 반찬꺼내서 밥 챙겨먹어

AND 연산

A AND B : 자바에서는 AND 연산을 &&
AND기호 양쪽의 항이 모두 true여야 true가 되는 연산

AND     TRUE    FALSE     ?
TRUE    TRUE    FALSE     ?
FALSE   FALSE   FALSE   FALSE
  ?      ?      FALSE     ?

2) OO야 중국집에 밥 시켜서 먹거나, 반찬꺼내서 밥먹어

OR 연산

A OR B : 자바에서는 OR 연산을 ||
OR기호 양쪽의 항 중 어느 하나만 TRUE면 TRUE가 되는 연산
양쪽항이 모두 FALSE일때만 결과가 FALSE

OR      TRUE    FALSE     ?
TRUE    TRUE    TRUE     TRUE 
FALSE   TRUE    FALSE     ?
  ?     TRUE      ?       ?

========================================================

제어문
- 위에서 아래로 한줄씩 실행하지 않고,
  1) 어떤건 실행하고, 어떤건 실행하지 않게 하거나!
  2) 어떤 내용은 반복해서 실앵하게 하고 싶을때!

사용하는 문장을 제어문이라고 한다.

조건문 (상황에 따라 실행될 문장을 설정)
반복문 (상황에 따라 동일한 명령을 여러번 수행)

-------------------------------------------------------

if문 : 가장 대표적인 조건문
-> 자바내에 모든 조건 혹은 상황과 관련된 내용을
  사용할 수 있다.

단일 if
: 맞으면 실행 (아니면 실행안함)

if ~ else : 맞아? 아니야?

if ~ else if ~ elseif ~~~~ else
: 만약에? 아니면 만약에~~~~ 다 아니면 이거!

- else는 if와 else if 사이에 올 수 없다.

- if ~ else if ~ else if 
-> else 없는 경우도 있다.

[숙제 01]#######################################

IfTest04.java 에 있는 내용과
똑같은 기능을 하도록
IfTest.java 를 완성해주세요.

단, IfTest04 에 사용된 조건식 외에 조건식은
   사용할 수 없습니다.

################################################


-------------------------------------------------------

switch ~ case 문은
100% if문으로 전환이 가능하다!
- 반대는 안되는 경우도 있다!

##########################################################
또 숙제 2) -- 강사가 이제 막낸다...

SwitchCaseTest01 랑 똑같이 동작하는 if문을 만들어주세요!

숙제3)
switch ~ case 문을 써서
91점 이상만 A 즉, 90점은 B
81점 이상만 B
로 나오게 해주세요.

단, case 의 숫자는 더 늘리지 말아주세요


##########################################################
