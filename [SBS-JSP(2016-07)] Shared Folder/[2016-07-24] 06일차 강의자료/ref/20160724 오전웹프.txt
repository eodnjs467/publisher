
메서드(Method)
- 보통 프로그래밍 언어에서 함수(function)를 의미

- 일정 기능 수행을 하기 위한
  코드 덩어리  { } 

[접근제어자]  [리턴타입] [메소드명]([매개변수],
public        int         add       (int a, int b){
   return a+b;
}

[주의사항]
- 리턴타입과 return할 데이터의 타입은 일치해야한다!

- 리턴타입과 매개변수의 데이터타입은
  아무상관이 없다. (같아도 되고, 달라도 된다)

- 리턴타입, 매개변수의 타입은
  자바에 존재하는 모든 데이터 타입 사용이 가능


void method

- 메서드에서 리턴타입이 void 면
  코드블록안에 소스코드를 실행만하고
  결과로 내놓는 데이터는 없다!

######################################################
숙제1
Gugu.java
GuguTest.java
를 완성해주세요....
######################################################


메서드 오버로딩(Overloading)

- 하나의 클래스 안에서
  동일한 이름의 메서드를 여러개 만드는 방식

!!!-> 면접때 자주 물어본다.
      오버로딩 VS 오버라이딩

조건)
- 메서드 이름이 같아야한다
- 입력 파라미터의 개수나 데이터타입이 달라야한다.
- 메서드의 리턴 타입은 영향을 주지 않는다.


메서드 오버로딩은

- 이 메서드들을 사용하는 프로그래머 입장에서
  동일한 기능을 기대하고 있는데,

  입력되는 파라미터의 개수 혹은 데이터타입일 다를때
  오버로딩을 사용해서 
  똑같은 이름의 메서드를 여러개 만들때 사용한다.

-> 국내에서는 오버로딩 기법을 활용해서
   메서드를 제작하는 경우가 별로 없다.

###############################################

String 
: 기본형데이터타입인 char가 
  문자 하나 밖에 저장못해서 불편해서

  여러문자로 이루어진 문자열을 저장하기위해서
  자바에서 제공하는 데이터타입 (참조형, 클래스)

- 내부적으로는 char 배열을 사용하고 있다.

- String str = "hi!", str = "hi!!";
-> 이렇게 문자열 데이터를 바꾸면
-> 메모리 내부에서는 새로운 메모리가 생성된다.

String 클래스에서 많이 사용하는 메서드
- length(); !!!
- subsTring(); !!!!
- equals(); !!!!
- replace(); !



생성자(Constructor)

- 모든 클래스는 반드시 하나 이상의 생성자가 있어야 한다!
-> 생성자 : 클래스와 동일한 이름을 가진 특이한 메서드

- 프로그래머가 클래스에 생성자를 하나도 선언해놓지않았다면
 컴파일러가 자동으로 하나 만들어준다.

-> 기본생성자 
   입력파라미터 X  (...)
   실행되는 코드 X {...}

this : 자기 자신을 의미한다.

- this() : 지금 나 말고 다른 생성자를 실행해줘!!

- this.  : 멤버를 가리킬때 사용한다.
           인스턴스 변수, 메서드
