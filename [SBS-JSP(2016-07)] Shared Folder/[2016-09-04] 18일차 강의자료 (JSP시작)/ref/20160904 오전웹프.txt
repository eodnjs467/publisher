책에서 Chap 12 는 안하고 넘어감.

#######################################################################

웹 프로그래밍(Web Programming) 개요

- 웹에서 동작하는 프로그램을 제작하는 일

웹(Web)?
- 월드와이드웹(World Wide Web) 서비스를 의미
-> 검색포탈, 금융서비스, 쇼핑몰 등등 : 웹 서비스

- 인터넷 서비스중 하나
-> FTP (File Transfer Protocol)
-> SSH

- 왜 웹서비스를 인터넷으로 통칭해서 부를까?
-> 인터넷 서비스중에 웹 서비스가 가장 대중화 되있기 때문

- 왜 웹 서비스가 가장 대중적인 인터넷 서비스가 되었을까?
-> 사용이 가장 쉽기 때문

- 그러면 무슨 짓을 했길래? 사용자가 편하다고 느낄까?
-> 키보드로 명령어를 치지 않고, 마우스 클릭을 사용해서
   정보 열람이 가능
-> GUI(Graphic User Interface) 구현이 가능

- 그러면 마우스 클릭, GUI 를 사용할 수 있는 기능이 뭔데?
-> 하이퍼링크 (HyperLink)

- 하이퍼링크가 뭐야?
-> 마우스 클릭 만으로 정보 이동이 가능하게 만들어놓은
   문서상의 연결고리
-> 우리가 웹 서비스 상에서 사용하고 있는
   대부분의 버튼, 밑줄그어진 파란글자

-> 정보 열람 속도가 압도적으로 빠르고, 쉽기때문에
   사람들이 많이 쓸수밖에 없다.

----------------------------------------------------------------

웹 서비스의 구성요소

- 웹 클라이언트(Web Client)
-> 웹 서비스를 통해 뭔가 서비스를 제공받길 원하는 주체
   사람 혹은 그 사람이 사용하는 컴퓨터

- 웹 브라우저(Web Browser)
-> 웹 클라이언트가 받길 원하는 서비스를 웹 서버에게 전달해주고,
   웹 서버에서 전달해준 서비스를 웹 클라이언트에게 보여주는 역할
   매개체

- 웹 서버(Web Server)
-> 웹 클라이언트가 요청한 서비스를 제공
   서비스를 제공하기 위한 프로그램 혹은 HTML문서를 보유

요청(Request)
- 웹 클라이언트가 웹 서버에게 원하는 서비스를 달라고 조르는 거

응답(Response)
- 웹 서버가 웹 클라이언트가 원하는 서비스를 제공하는거


그런데, 웹 브라우저는 제품이 다 다른데
어떻게 똑같이 동작하지?

- 약속이 정해져있기 때문이다
-> 어떻게 통신할지, 어떻게 화면을 보여줄지

- 프로토콜(Protocol)
-> IT업계에서 통신간에 약속

웹 서비스에서 
웹 브라우저 <-> 웹 서버간의 통신 약속, 규약

HTTP(HyperText Transfer Protocol)

하이퍼텍스트 : 
- 기존의 존재하던 문자의 의미를 뛰어넘은 텍스트
- 하이퍼링크를 사용할 수 있는 텍스트

http://www.naver.com


웹 서버의 응답은 기본적으로 HTML을 제공.

HTML(HyperText Markup Language)

- 하이퍼텍스트 : 위에 보세요.

- Markup(마크업) Language

[여기부터헤드라인]
  낮 최고 기온 23도, 가을이 성큼
[헤드라인끝]

-> 실제 출력되는 내용이 아니라,
   출력되는 내용이 어떻게 출력될지에 대해 정해놓은 특수한 명령어, 기호

HTML
- 하이퍼 링크를 사용할 수 있는 하이퍼텍스트를 이용해서,
  화면(웹 브라우저)에 
  웹 클라이언트에게 보여줄 내용이 어떻게 출력될지
  지정하는 언어


웹 프로그래밍 

- 웹 브라우저를 통해서 웹 서비스를 제공하는
  프로그램(웹 애플리케이션)을 만드는 일

- HTTP 프로토콜을 사용해서 사용자가 원하는
  HTML을 제공하는 일

#####################################################################

웹 서비스의 방식 (강의노트 p.9, 책 p.21)

---------------------------------------------------------------------

정적 웹 서비스(Static Web Service)

- 서비스를 제공하는 웹 서버가
  웹 클라이언트에게 전송해줄 HTML 문서 파일을 가지고 있는 상태
-> 만들어져있는(완성되어있는) HTML 문서를 전송만 하는 방식

- 백화점에서 옷 사는거

- 만들어진것만 제공하니까 빠르다 : 장점
- 세세한 부분에 변경이 어렵다 : 단점
-> 매번 새로운 페이지가 완성되있어야한다.


동적 웹 서비스(Dynamic Web Service)
- 완성된 HTML을 가지고 있지 않다.
-> 그때그때 사용자의 요청에 맞는 HTML 을 제작해서 전송

- 재봉사가 직접 만들어주는 옷

- 직접 한땀한땀 만들어서 주니까 느리다 : 단점
- 세세한 부분, 혹은 사용자마다 달리 보여줘야하는 부분과 같은
  내용은 변경이 유연하다 : 장점
-> 사용자마다 특화된 페이지를 볼 수 있다.

- 웹 프로그래밍 이제 필요해진다.
-> 그때그때 상황에 따라서 다른 HTML 페이지를 전송

- HTML문서를 자동으로 제작해주는 프로그램을 만드는게
  웹 프로그래밍

-----------------------------------------------------------------

CGI(Common Gateway Interface) 강의노트 p.10, 책 p.22

- 웹 서버와 HTML을 제작해주는 프로그램간의 통신 규약

-> HTTP는 웹 브라우저와 웹 서버간의 통시 규약

[웹 클라이언트 (웹 브라우저)] 
<--> 
[웹 서버 (HTML을 만들어주는 프로그램)]

CGI방식은 단점이 있다!
- 웹 서버가 HTML을 만들어주는 프로그램을 직접 실행
-> 똑같은 요청이 올때마다 프로그램을 계속 실행
   (프로세스 기반 실행 방식)

- 그래서 메모리 효율이 떨어진다!!!

-----------------------------------------------------------------

애플리케이션 서버(Application Server) 방식
- 확장 CGI 방식

[웹 클라이언트 (웹 브라우저)] 
<--> 
[웹 서버] <--> [웹 애플리케이션 서버(멀티쓰레드 방식)]

- 메모리 효율이 매우 좋아진다.

-----------------------------------------------------------------

[웹 클라이언트] - [웹 브라우저] 
- [웹 서버] - [웹 애플리케이션 서버] - [데이터베이스 서버]

JSP(Java Server Page)
- 자바 프로그래밍 언어를 활용해서
  웹 서비스를 제공하는 프로그램을 만들기 위한 기술

- HTML 문법을 그대로 사용하되,
  필요한 곳에만 Java 문법을 삽입

Servlet (Server + Applet)
- 자바 프로그래밍 언어를 활용해서
  웹 서비스를 제공하는 프로그램을 만들기 위한 기술
- JSP보다 먼저 나온기술

- 완성된 Java 파일안에 출력에 필요한 HTML이 삽입

ASP, PHP

--------------------------------------------------------------------

책 p.25 ~ 29 까지는 한번 읽어봐주세요. (열심히 썼어요)

--------------------------------------------------------------------

p.31 개발환경 구축

- JDK 7 설치
- eclipse 설치 (EE)

p.39 아파치 톰캣(Apache Tomcat) 7.0 설치
http://tomcat.apache.org

[Downloads] - [Tomcat 7]

Binary Distributions - Core: zip (pgp, md5, sha1)

아파치 톰캣은
- 웹 서버, 웹 애플리케이션 서버 역할을 하는 무료 프로그램

- zip 파일을 SBSJSP 폴더에 그대로 풀자!

C:\SBSJSP\apache-tomcat-7.0.70

이클립스 키고 
[Window] - [Show View] - [Other] - [Server] 선택

하면 아래에 [Servers] 탭이 하나 생긴다.

######################################
[숙제]
이게 이클립스에 아파치 톰캣을 연동
######################################

강의실에서는 8080포트를 누군가 쓰고 있어서,
server.xml 안에 8080 포트를 찾아서 8081로 바꿨다!

- 우리 수업할때는 요 8081 포트를 쓸 예정이다.
-> 집에서는 그냥 8080 쓰겠다.

##########################################
[숙제]
- JDK 7 설치
- 이클립스 EE 버전 (Luna)
- 아파치 톰캣 연동
- HelloHTML.html, HelloJSP.jsp 만들어서
  실행해서, 실행한 결과 화면 두개를 캡춰
##########################################

