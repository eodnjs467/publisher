##[14일차 숙제]#####################################################

1) EMP Table에서 이름(ENAME), 급여(SAL), 커미션 금액(COMM), 총액(SAL + COMM) 을 구하여 총액이 많은 순서로 출력(단, 커미션(COMM)이 Null인 사람은 제외)

select ename, sal, comm, sal+comm as sumsal
  from emp
 where comm is not null
order by sumsal desc;

-------------------------------------------------------------------

2) 모든 사원의 실수령액을 계산하여 출력.
(단, 급여(SAL)가 많은 순으로 이름(ENAME), 급여(SAL), 실수령액을 출력)
실수령액은 급여에 대해 10% 세금을 뺀 금액

select ename, sal, sal*0.9 as realsal
  from emp
order by realsal desc;

-------------------------------------------------------------------

3) 10번 부서(DEPTNO) 월급(SAL)의 
평균, 최고, 최저, 인원수를 구하여 출력
(group by 사용/미사용 버전 두개 제작)

select avg(sal), max(sal), min(sal), count(*)
  from emp
group by deptno
having deptno = 10;

select avg(sal), max(sal), min(sal), count(*)
  from emp
 where deptno = 10;

-------------------------------------------------------------------

4) 각 부서별(DEPTNO) 급여(SAL)의 평균, 최고, 최저, 인원수를 구하여 출력
◦(group by 사용/미사용 버전 두개 제작)

select avg(sal), max(sal), min(sal), count(*), deptno
  from emp
group by deptno

select avg(sal), max(sal), min(sal), count(*), '10' as deptno
  from emp
 where deptno = 10
union all
select avg(sal), max(sal), min(sal), count(*), '20' as deptno
  from emp
 where deptno = 20
union all
select avg(sal), max(sal), min(sal), count(*), '30' as deptno
  from emp
where deptno = 30

-------------------------------------------------------------------

5) 3,4 번 Query를 WITH 절을 사용하여 DEPT_10, DEPT_ALL 로 정의한 후, 둘의 UNION, UNION ALL, MINUS, INTERSECT

with
dept_10 as (select avg(sal), max(sal), min(sal), count(*)
              from emp
	     group by deptno
	    having deptno = 10),
dept_all as (select avg(sal), max(sal), min(sal), count(*)
              from emp
	     group by deptno)
select * from dept_10
union
-- union all
-- minus
-- intersect
select * from dept_all;

-------------------------------------------------------------------

6) 같은 업무(JOB)를 하는 사람의 수가 4명 이상인 업무와 인원수를 출력

select job, count(*)
  from emp
group by job
having count(*) >= 4;

-------------------------------------------------------------------

7) WITH절에 EMP, DEPT Table을 WHERE 조건에 부서번호(DEPTNO) 종류별로 나누어 정의후, (EMP10, EMP20, EMP30, EMP40, DEPT10, DEPT20, DEPT30, DEPT40) DEPTNO 가 같은 Inline-View 끼리 EMPXX, DEPTXX 를 데카르트 곱이 생기지 않도록 JOIN 하여 하나의 Table 처럼 결과가 나오도록 출력
(EMPNO, ENAME, DEPTNO, DNAME)

with
emp10 as (select empno, ename, deptno from emp where deptno = 10),
emp20 as (select empno, ename, deptno from emp where deptno = 20),
emp30 as (select empno, ename, deptno from emp where deptno = 30),
emp40 as (select empno, ename, deptno from emp where deptno = 40),
dept10 as (select deptno, dname from dept where deptno = 10),
dept20 as (select deptno, dname from dept where deptno = 20),
dept30 as (select deptno, dname from dept where deptno = 30),
dept40 as (select deptno, dname from dept where deptno = 40)
select e.empno, e.ename, d.deptno, d.dname
  from emp10 e, dept10 d
 where e.deptno = d.deptno
union all
select e.empno, e.ename, d.deptno, d.dname
  from emp20 e, dept20 d
 where e.deptno = d.deptno
union all
select e.empno, e.ename, d.deptno, d.dname
  from emp30 e, dept30 d
 where e.deptno = d.deptno
union all
select e.empno, e.ename, d.deptno, d.dname
  from emp40 e, dept40 d
 where e.deptno = d.deptno

-------------------------------------------------------------------

다음주부터 JSP 수업은
강사가 직접 쓴 (저자 직강)
책으로 수업을 하겠다! (책팔이 아님)

JSP Web Programming 웹 서비스 & 애플리케이션 개발을 위한 입문서

- 숙제가 챕터마다 나갈거다.
-> 소스코드를 강사가 직접 주지는 못한다.
-> 제출해주신 숙제를 공유하는 쪽으로 방향을 잡겠다

- 코딩을 정말 많이 할꺼다.
-> 타자 연습을 좀 해놓자.

- 공부해야되는데 p.640
-> 실제 수업일수가 14일
-> 수업을빠지는건 더이상은 네이버
-> 하루 한 챕터씩 쳐나갈꺼다.

수업
- JSP/Servlet 이라는 Java를 사용한 웹프로그래밍 기술
- 웹 서버 - Apache Tomcat
- DB - MySQL
- HTML5(X), HTML4
-> CSS(X), Javascript(X)

-------------------------------------------------------------------

select ename, sal
  from emp
 where sal >= (select sal
                 from emp
		where ename = 'JONES');

서브쿼리(Sub Query)
- 특정 SQL문 안에 포함된 또다른 SELECT문
- SELECT절, FROM절, WHERE절
- 소괄호로 묶어준다 ()

- 서브쿼리는 대부분 독립적으로 완벽한 SELECT문

select hiredate
  from emp
 where ename = 'BLAKE';

select ename, hiredate
  from emp
 where hiredate > (select hiredate
                     from emp
                    where ename = 'BLAKE');

select * from (
select *
from (
	select ename, hiredate
	  from emp
	 where hiredate > (select hiredate
			     from emp
			    where ename = 'BLAKE')
	) e1, emp
where ...
) a, emp2
where ...

--------------------------------------------------------

select *
  from emp
 where job in (select job
                 from emp
		where ename = 'FORD'
		   or ename = 'JAMES');

select empno, ename, job, sal
  from emp
 where sal = any (select sal
                    from emp
		   where job = 'MANAGER')

select * from emp
 where sal < any (select sal
                    from emp
		   where deptno = 30);

--[popquiz]--------------------------------------------
10페이지에 가장 밑에 있는 SELECT문을
ANY를 쓰지 않고, 동일한 결과값이 나오도록 바꿔주세요.

select * from emp
 where sal < (select max(sal)
                from emp
               where deptno = 30);
-------------------------------------------------------

select empno, ename, job, sal
  from emp
 where sal < all (select sal
                    from emp
		   where job = 'MANAGER')

select empno, ename, job, sal
  from emp
 where sal < (select min(sal)
                from emp
	       where job = 'MANAGER')


select dname, deptno
  from dept
 where exists (select * from emp
                 where deptno = 30);

select *
  from emp
 where (sal, deptno) in (select min(sal), deptno
                           from emp
			 group by deptno)

create table scott.dept2
    as select *
         from dept;

insert into dept2 values(50, 'A', 'B');

insert into dept2 values(60, 'B', null);

insert into dept2(deptno, loc) values(70, 'C');

insert into dept2 (deptno, dname   , loc   )
           values (99    , '인사과', '서울');

insert into 
dept2 (deptno, dname   , loc   ,   a,   b,  c, 
       deptno, dname   , loc   ,   a,   b,  c, 
       deptno, dname   , loc   ,   a,   b,  c, 
       deptno, dname   , loc   ,   a,   b,  c, 
       deptno, dname   , loc   ,   a,   b,  c, 
       deptno, dname   , loc   ,   a,   b,  c, 
       deptno, dname   , loc   ,   a,   b,  c, 
       deptno, dname   , loc   ,   a,   b,  c)
values(99    , '인사과', '서울', 'a', 'b', 'c');

insert into dept2 (deptno, dname, loc)
select deptno, dname, loc from dept;

insert into dept2 (deptno, dname)
values(999, '총무과');

update dept2
   set dname = '서울';

-------------------------------------------------

UPDATE : 이미 존재하는 로우의 데이터를 수정하기 위해 사용

- WHERE 조건을 통해서 바껴야 되는 대상 로우를 선별

#################################
!!!![주의사항]!!!!
- 반드시 update 할 조건으로
  SELECT문을 먼저 테스트 실행
#################################

update dept2
   set dname = '부산'
 where deptno = 50;

select *  from dept2  where deptno = 50;

select deptno, loc, 
       dname as before_dname,
       decode(deptno, 50, '부산', dname) as after_dname
  from dept2

delete from dept2
  where deptno not in (10, 20, 30, 40);

select * from dept2
  where deptno not in (10, 20, 30, 40);