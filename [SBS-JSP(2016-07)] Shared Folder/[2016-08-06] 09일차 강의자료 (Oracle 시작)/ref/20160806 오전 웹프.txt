오라클 홈페이지
http://www.oracle.com/

오라클 - 상단 [다운로드] - 데이터베이스
- Oracle Database


Oracle Database 12c Release 1
이거 우리가 쓰는 버전 아님

11g 버전이 우리가 쓰는거다!

8i, 9i, 10g, 11g, 12c

Oracle Database 11g Release 2
이게 우리가 쓸 버전

 Microsoft Windows (x64)
 File 1, File 2  (2GB)  See All


#########################################################

상속(extends) VS 구현(implements)

상속은
이미 만들어져있는
클래스의 기능들을 물려받아서 쓰겠다.
-> 가끔 오버라이딩 해서 좀 바꿔 쓰겠다!

구현은
정의만해놓은 기능들을
내가 직접 구현해서(코드를 완성해서) 쓰겠다! 선언!



인터페이스를 쓰는 이유!!

- 프로그래밍 표준 제시
-> 4개월차때 JDBC 라고 데이터베이스 프로그래밍할떄 다시!

- 자바에서 불가능한 다중 상속 흉내

- 상속외에 클래스들간의 관계를 만들어준다!
-> 약간 느슨한 관계

#########################################################

예외처리
- 프로그램이 갑자기 종료되는 것을 막는다
- 스무~스하게 사용자에게 문제를 알리고
  프로그램이 계속 동작할 수 있도록 해주는 처리방식

이벤트 :
프로그램 수행 도중에 
잠깐 멈추고, 처리해야하는 작업

프로세스는 이벤트가 발생하면
이벤트를 처리하고 나서야, 원래 수행중이던 작업을
다시 재개


try ~ catch 구문 예외처리
- try 코드블록 안에
  오류가 발생할수도 있지만 수행해야하는 기능 코드를 넣는다

- 만약에 try 블록안에 오류가 발생하면
  catch 블록에서 해당 오류 상황을 분석한 후,
  처리한다!

- 만약에 try 블록안에 오류가 발생하지 않는다면
  catch 블록은 수행되지 않고 다음 코드를 수행한다


Exception 클래스다!!!

- 자바에서 예외상황을 처리하기 위해
  만들어놓은 클래스

- 자바 내 예외상황에 관련된 클래스들중 가장 부모 클래스

- 모든 예외 상황을 처리할수 있는 능력이 있다!
 -> 폴리몰피즘에 의해서

- Exception 클래스를 이용한 예외처리는
  try ~ catch에서 가장 마지막 catch 넣어야 한다



finally
- try{} catch{} 맨 아래에 붙는 구문

- try 블록 안에서 오류가 발생하든, 발생하지않든
  무조건 실행되어야 하는 코드가 있을때
  finally 블록안에 코드를 작성해준다

####################################################

데이터!!!

- 컴퓨터에서 저장하는 자료!
-> 사전적인 의미로는 [정보] 도 포함

데이터랑 정보는 구분
- 데이터는 그냥 잘 쌓여있는 자료

- 정보는 잘 쌓여있는 데이터를 잘 분석해서
  얻어내는 지식

- 가치는 데이터에서 얻은 정보를 잘 활용해서
  돈이되게 만든거



관계형 데이터베이스!
(Relational Database) RDB 

- 데이터를 2차원 표형태로 저장하는 데이터베이스
-> excel
-> 이 표형태를 : 테이블(table)

- 테이블들의 관계를 잘 규명해서
  데이터를 저장하는게 관건!

- 



