1번 문제 
http://blog.naver.com/highkrs/220276708627

2번 문제
http://arabiannight.tistory.com/entry/자바Java-break문-contunue문-이름-붙은-반복문-사용법
-> 요기는 저작권 위반
-> 즐겨찾기나 복사 잘 해두고
   내가 자바의 달인이 되서 필요없을때
   신고를 하자. 위법은 좋지 않은거니까

숙제3) 33P 다섯개 출력이 되는 파일을 for/while 방식으로
      각각 만들어서 10개 제출

-> 해보니까...
   순차적으로 증감되는 반복문은
   무조건 for문 사용하는게 좋겠더라....

###########################################################

구조체

- 사용자 정의 데이터타입

-> 프로그래머가 필요에 의해서 데이터타입을
  직접 만들어 놓은것

int   a    = 10;

int[] arr;
arr = new int[5];

Tv    myTv;
myTv = new Tv();


구조체를 쓰는 이유
- 한꺼번에 여러개의 다양한 종류의
  데이터타입의 변수를 한번에 선언하기 위해서

-> 한꺼번에 여러 종류의 여러개의 메모리 공간을
   할당받기 위해서


클래스!!!!
- 사용자 정의 데이터 타입

- 기존 구조체 형식의 여러 변수 선언이 가능한데,
  여기다가 기능수행이 가능한 함수(Function)고 포함되는
  
  가장 진화된 데이터타입


클래스의 구성요소!!!

1) 데이터를 저장할 수 있는 부분
  변수선언 (멤버변수)

2) 저장되어 있는 데이터를 가공하거나,
   연산하기 위한 기능을 수행하는 부분
   (일반적으로 프로그래밍에서는 함수)

   자바에서는 메서드

    

######################################################

클래스(Class)와 객체(Object)

- 클래스는 단순히
  메모리를 얼마만큼 어떻게 얻어올지 정의해놓은 문서

- 객체
  클래스에 정의되어 있는대로 
  메모리를 빌려와있는 상태
  
  메모리를 차지하고 있는 상태

  그 차지하고 있는 메모리 그 자체

int a1    = 10;
int a2    = 20;
int a3    = a1;

Tv  myTv  = new Tv();
Tv  myTv2 = new Tv();
Tv  myTv3 = myTv;


우리가 지금까지 만들었던 java 파일들은
모두
 이름앞에 class가 붙어 있었다.

즉 우리는, 여태까지
데이터타입을 만들고 있었던 것이다!


- 가장 중요한 개념
- 면접때 많이 물어본다

- 클래스와 객체에 대해서 얘기해보시겠어요?

-> (너무 잘난척하는듯이 보이지 않게)
   
   클래스는 사용자 정의 데이터 타입입니다.

   프로그래머가 필요에 의해서 데이터타입을 직접 구현한거구요.

  크게 멤버 변수 부분과, 메서드 부분으로 나눌수 있습니다.

  멤버변수부분이 여러종류의 데이터를 저장하기 위한 부분

  메서드 부분은 기능을 실행하는 부분이구요.

  
  객체는 이렇게 클래스에 정의되어있는대로

  메모리를 사용하고 있는 상태를 의미합니다.


  어... 책에서는
  자동차설계도와 자동차로 보통 설명하곤 하죠 ㅎㅎㅎㅎ

###############################################
숙제 1
- Tv 클래스에 Tv의 볼륨을 하나 올려주는거
하나 내려주는거 메서드를 만들고,

TvTest 에서 잘 동작하는지 확인하는 코드
###############################################



Card c1 = new Card();
c1.kind = "HEART";
c1.number = 7;

Card c2 = new Card();
c2.kind = "SPADE";
c2.number = 3;

c1.width = 30;
c1.height = 300;


선언 위치별 변수

- 지역변수(Local Variable)
-> 메서드 안에 선언된 변수
-> 메서드 안에서밖에 사용이 안된다.
-> 선언 후 데이터를 프로그래머가 넣어주지 않으면
   사용이 불가능하다.

- 인스턴스 변수(객체변수) 글로벌 변수 전역 변수

-> 메서드 밖에, 클래스 바로 안쪽에 선언되어 있는 변수
-> 클래스 안에서 대부분의 영역에서 사용이 가능하다.

-> 객체가 만들어질때마다
   메모리를 새로 할당 받는다.
   객체별로 따로따로 사용가능한 변수

- 클래스 변수(스태틱 변수, 공용 변수) 글로벌 변수, 전역변수

-> 메서드 밖에, 클래스 바로 안쪽에
   static 용어를 사용하여 선언된 변수

-> 클래스 안 모든 영역에서 사용이 가능하다.

-> 객체를 만들지 않아도 사용할 수 있는
   유일한 종류의 변수

-> 객체를 만들지 않아도
   클래스 이름만 언급되어도 바로 사용가능한 변수

-> 클래스당 단 하나의 메모리만 차지한다.
   (클래스변수)


참고) static 메서드 앞에도 붙을수 있다!
-> 객체를 생성하지 않고도 기능수행이 가능한 메서드




