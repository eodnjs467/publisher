####################################################################
##[MySQL 설치]######################################################
####################################################################

mysql 다운로드 홈페이지

http://dev.mysql.com/downloads

MySQL Community Server

현재 최신 버전 : MySQL Community Server 5.7.16 

Installer MSI 버전 다운로드 받기

Windows (x86, 32-bit), MSI Installer	5.7.16	385.2M	

mysql-installer-community-5.7.16.0.msi

설치

라이센스 동의 -> Developer Default
-> 파이썬은 무시 -> Execute -> 두번정도 넥스트
-> 3306 이라는 숫자를 기억하자 -> 비밀번호는 1234로 했다.
-> 넥스트 두어번 하고 -> Execute
-> 피니쉬 하고 또 넥스트 -> 아이디랑 비밀번호로 접속 체크 버튼
-> execute -> 넥스트 -> 피니쉬

C:\Program Files\MySQL\MySQL Server 5.7\

bin

컴퓨터 - 속성
-> 고급 시스템 설정
-> 고급탭 -> 환경 변수

MYSQL_HOME
C:\Program Files\MySQL\MySQL Server 5.7\

path 찾아서 편집
- 맨 앞으로 가서
- %MYSQL_HOME%\bin;

####################################################################
DB생성 및 계정 생성
####################################################################

mysql -p -u root

select version();

show databases;

데이터베이스 생성
create database jspbook default character set utf8;

grant select, insert, update, delete, create, alter, drop
on jspbook.* to 'jspbook'@'localhost'
identified by 'jspbook';

use jspbook;
show tables;

요까지 하면, MySQL 준비 끝!

검색으로 HeidiSQL

table 생성 p.416 페이지

CREATE TABLE STUDENT(
	STUDENT_ID VARCHAR(10) NOT NULL PRIMARY KEY,
	STUDENT_NAME VARCHAR(10) NOT NULL,
	STUDENT_EMAIL VARCHAR(50),
	STUDENT_TEL VARCHAR(50),
	DEPARTMENT_ID VARCHAR(20)
);

INSERT INTO STUDENT VALUES(
	'20140001', '홍길동', 'hong@email.com', '010-001-0001', 'M001');

INSERT INTO STUDENT VALUES(
	'20140002', '이순신', 'sslee@email.com', '010-002-0002', 'M003');

INSERT INTO STUDENT VALUES(
	'20140003', '성춘향', 'sch@email.com', '010-003-0003', 'M001');

INSERT INTO STUDENT VALUES(
	'20120004', '허광남', 'okjsp@email.com', '010-004-0004', 'M003');

INSERT INTO STUDENT VALUES(
	'20130005', '이지훈', 'groovysunday@email.com', '010-005-0005', 'M003');

p.422 페이지까지는 한번 읽어보자.

####################################################################
JDBC 프로그래밍
####################################################################

JDBC(Java Database Connectivity) 프로그래밍

- Java Database Programming

JDBC 인터페이스
- 표준

C:\Program Files (x86)\MySQL\Connector.J 5.1
- mysql-connector-java-5.1.39-bin.jar

오라클은
C:\app\admin\product\11.2.0\dbhome_1\jdbc\lib
ojdbc6.jar

-------------------------------------------------------------------

p.425 JDBC 프로그래밍 작성 순서
★★★★★★★
- 다 외워야된다.
- 코딩도 할 수 있어야된다.

p.426
데이터베이스 프로그래밍을 위해 임포트
<%@ page import="java.sql.*" %>

사용 데이터베이스에 맞는 JDBC 드라이버를 로딩
jdbc:mysql:localhost:3306/jspbook

Connection conn = DrvierManager.getConnection(
"jdbc:/mysq://localhost:3306/jspbook",
"root", "jspbook");

SQL문을 실행해주는 객체
Statment stmt = conn.createStatment();

executeUpdate : SELECT를 제외한 모든 SQL문 실행해주는 메서드

executeQuery : SELECT문을 실행해주는 메서드
-> return type [ResultSet]

ResultSet rs = stmt.executeQuery("SELECT * FROM STUDENT");

rs.next() : 
현재 SELECT 실행한 결과 첫 로우부터
다음 남아있는 로우가 있는지 검사

while(rs.next()){

}

자원해제
rs.close();
stmt.close();
conn.close();

-------------------------------------------------------------------

PreparedStatement 
- SQL 작성을 좀 더 편하게 하기 위해 사용
-> 각자 실습해보자

-------------------------------------------------------------------

커넥션 풀(Connection Pool)
- 코딩X
- 개념적인 부분 반드시 알고 있어야 한다 : 면접
